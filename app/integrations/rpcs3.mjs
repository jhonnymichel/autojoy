import { user } from "../constants.mjs";
import { loaders, savers } from "../file.mjs";
import path from "path";

const configTemplates = loaders.yml("config-templates/rpcs3.yml");
const rpcs3Path = user.paths.rpcs3;
const profileName = "autojoy-autogenerated-profile";
const configFileName = `config/input_configs/global/${profileName}.yml`;
const activeProfileFileName = `config/input_configs/active_input_configurations.yml`;

const getActiveProfileObject = () => ({
  ["Active Configurations"]: {
    global: profileName,
  },
});

const playerIdentifiers = [
  "Player 1 Input",
  "Player 2 Input",
  "Player 3 Input",
  "Player 4 Input",
  "Player 5 Input",
  "Player 6 Input",
  "Player 7 Input",
];

const deviceIdentifiers = [
  "XInput Pad #1",
  "XInput Pad #2",
  "XInput Pad #3",
  "XInput Pad #4",
];

function findNextConnectedIdentifier(deviceList, position) {
  let identifiersFound = -1;
  for (let index in deviceList) {
    const device = deviceList[index];
    if (device) {
      identifiersFound++;
      if (position === identifiersFound) {
        return deviceIdentifiers[index];
      }
    }
  }
}

const rpcs3 = {
  handleDeviceListUpdate(deviceList) {
    // it's possible for device 1 to be disconnected and device 2 to be connected. the order is not always reassigned when you disconnect a controller.
    // example: [null, null, XINPUT_DEVSUBTYPE_GAMEPAD, null]. It looks like this happen when you mix x360 and one/series controllers.
    const trimmedList = deviceList.filter((device) => device);
    const newConfig = {};
    playerIdentifiers.forEach((identifier, position) => {
      if (!trimmedList[position] || !deviceIdentifiers[position]) {
        newConfig[identifier] = configTemplates.Empty;
        return;
      }

      newConfig[identifier] = {
        ...(configTemplates[trimmedList[position]] ?? configTemplates.Empty),
      };

      // it's possible for device 1 to be disconnected and device 2 to be connected. the order is not always reassigned when you disconnect a controller.
      // example: [null, null, XINPUT_DEVSUBTYPE_GAMEPAD, null]. It looks like this happen when you mix x360 and one/series controllers.
      // so if we have only one controller for instance, it'll be assigned to player 1 in the emulator, but the selected device would be XInput pad #3
      newConfig[identifier].Device = findNextConnectedIdentifier(
        deviceList,
        position
      );
      console.log(newConfig[identifier].Device);
    });

    savers.yml(newConfig, path.resolve(rpcs3Path, configFileName));
    savers.yml(
      getActiveProfileObject(),
      path.resolve(rpcs3Path, activeProfileFileName)
    );
  },
};

export default rpcs3;
